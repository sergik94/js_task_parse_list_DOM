{"version":3,"sources":["scripts/main.js"],"names":["employeesList","document","querySelectorAll","sortedArray","getEmployees","sortList","ul","querySelector","transformSalary","employee","dataset","salary","split","join","slice","list","sort","employee1","employee2","first","second","employeesArr","item","obj","named","textContent","trim","position","age","push","innerHTML","map"],"mappings":";AAAA,aAoCA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCA,IAAMA,EAAgBC,SAASC,iBAAiB,MAC1CC,EAAcC,EAAaC,EAASL,IACpCM,EAAKL,SAASM,cAAc,MAElC,SAASC,EAAgBC,GAChB,OAACA,EAASC,QAAQC,OAAOC,MAAM,KAAKC,KAAK,IAAIC,MAAM,GAG5D,SAAST,EAASU,GACT,OAAA,EAAIA,GAAMC,KAAK,SAACC,EAAWC,GAC1BC,IAAAA,EAAQX,EAAgBS,GAGvBG,OAFQZ,EAAgBU,GAEfC,IAIpB,SAASf,EAAaW,GACdM,IADoB,EACpBA,EAAe,GAEFN,EAAAA,EAAAA,GAHO,IAGD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAdO,IAAAA,EAAc,EAAA,MACjBC,EAAM,CACVC,MAAOF,EAAKG,YAAYC,OACxBC,SAAUL,EAAKZ,QAAQiB,SACvBhB,OAAQW,EAAKZ,QAAQC,OACrBiB,IAAKN,EAAKZ,QAAQkB,KAGpBP,EAAaQ,KAAKN,IAXM,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAcnBF,OAAAA,EAGTf,EAAGwB,UACC3B,OAAAA,OAAAA,EAAY4B,IAAI,SAAA,GAAGP,IAAAA,EAAAA,EAAAA,MAAOG,EAAAA,EAAAA,SAAUhB,EAAAA,EAAAA,OAAQiB,EAAAA,EAAAA,IAE3BD,MAAAA,+BAAAA,OAAAA,EACFhB,wBAAAA,OAAAA,EACHiB,qBAAAA,OAAAA,EAEVJ,gBAAAA,OAAAA,EANc,mBAQfX,KAAK,IATV","file":"main.ed77f0e2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employeesList = document.querySelectorAll('li');\nconst sortedArray = getEmployees(sortList(employeesList));\nconst ul = document.querySelector('ul');\n\nfunction transformSalary(employee) {\n  return +employee.dataset.salary.split(',').join('').slice(1);\n}\n\nfunction sortList(list) {\n  return [...list].sort((employee1, employee2) => {\n    const first = transformSalary(employee1);\n    const second = transformSalary(employee2);\n\n    return second - first;\n  });\n}\n\nfunction getEmployees(list) {\n  const employeesArr = [];\n\n  for (const item of list) {\n    const obj = {\n      named: item.textContent.trim(),\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    };\n\n    employeesArr.push(obj);\n  }\n\n  return employeesArr;\n}\n\nul.innerHTML = `\n  ${sortedArray.map(({ named, position, salary, age }) => `\n  <li\n    data-position=\"${position}\"\n    data-salary=\"${salary}\"\n    data-age=\"${age}\"\n  >\n    ${named}\n  </li>\n  `).join('')}\n`;\n"]}